/**
 * Enums
 */
enum Locale {
  EN
  FR

  @@map("locale")
}

enum TokenType {
  ACCOUNT_VALIDATION
  REFRESH
  RESET

  @@map("token_type")
}

/**
 * Table
 */
model User {
  id           String    @id @default(cuid())
  isActive     Boolean   @default(false)               @map("is_active")
  firstname    String?
  lastname     String?
  email        String    @unique
  password     String
  lastLoginAt  DateTime?                               @map("last_login_at")
  createdAt    DateTime  @default(now())               @map("created_at")
  updatedAt    DateTime  @updatedAt                    @map("updated_at")

  roles       UsersRoles[]
  tokens      UserTokens[]
  preferences UsersPreferences?

  @@map("users")
}

model UserTokens {
  id          String    @id @default(cuid())
  userId      String    @map("user_id")
  token       String    @db.VarChar(500)
  type        TokenType
  expiresAt   DateTime? @map("expires_at")
  createdAt   DateTime  @default(now()) @map("created_at")
  updatedAt   DateTime  @updatedAt @map("updated_at")

  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("users_tokens")
}

model Role {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  isActive  Boolean  @default(false)                  @map("is_active")
  createdAt DateTime @default(now())                  @map("created_at")
  updatedAt DateTime @updatedAt                       @map("updated_at")

  users      UsersRoles[]
  modules    RolesModules[]

  @@map("roles")
}

model UsersRoles {
  userId    String                                    @map("user_id")
  roleId    Int                                       @map("role_id")
  createdAt DateTime @default(now())                  @map("created_at")
  updatedAt DateTime @updatedAt                       @map("updated_at")

  user      User     @relation(fields: [userId], references: [id])
  role      Role     @relation(fields: [roleId], references: [id])

  @@id([userId, roleId])
  @@map("users_roles")
}

model UsersPreferences {
  id        Int     @id @default(autoincrement())
  userId    String  @unique                           @map("user_id")
  avatarUrl String? @db.VarChar(255)                  @map("avatar_url")
  updatedAt DateTime @updatedAt                       @map("updated_at")

  user      User    @relation(fields: [userId], references: [id], onDelete: Cascade)
  locale    Locale   @default(EN)

  @@map("users_preferences")
}
